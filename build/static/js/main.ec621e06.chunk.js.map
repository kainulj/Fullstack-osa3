{"version":3,"sources":["components/filter.js","components/person.js","components/personForm.js","components/messages.js","services/people.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","Person","person","removePerson","name","number","onClick","PersonForm","onSubmit","nameChange","numberChange","type","Notification","message","className","ErrorMessage","baseUrl","personObject","axios","post","then","response","data","get","id","delete","newPerson","put","App","useState","people","setPeople","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","errorMessage","setErrorMessage","useEffect","personService","peopleToShow","toLowerCase","includes","event","target","preventDefault","some","window","confirm","find","p","updatedPerson","map","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec621e06.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n            filter with <input\n                      value={props.filter}\n                      onChange={props.onChange}\n                    />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = ({person, removePerson}) => {\n    return (\n        <p>\n          {person.name} {person.number}\n          <button onClick={removePerson}>\n            delete\n          </button>\n        </p>  \n    )\n  }\n\nexport default Person","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <h2>Add a new</h2>\n      <form onSubmit={props.onSubmit}>\n        <div>\n          name: <input \n                  value={props.name}\n                  onChange={props.nameChange}\n                />\n        </div>\n        <div>\n          number: <input \n                  value={props.number}\n                  onChange={props.numberChange}\n                />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n}\n\nconst ErrorMessage = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n}\n  \n  export { Notification, ErrorMessage }\n  ","import axios from 'axios'\nconst baseUrl = '/api/people'\n\nconst create = (personObject) => {\n  const request = axios.post(baseUrl, personObject)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\n  return request.then(response => response.data)\n}\n\nexport default {create, getAll, remove, update}","import React, { useEffect, useState } from 'react'\nimport Filter from './components/filter'\nimport Person from './components/person'\nimport PersonForm from './components/personForm'\nimport {Notification, ErrorMessage} from './components/messages'\nimport personService from './services/people'\n\nconst App = () => {\n  const [ people, setPeople ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPeople(response)\n      })\n  }, [])\n\n  const peopleToShow = \n    people.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n \n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    if(!people.some(person => person.name === newName)){\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      \n      personService\n        .create(personObject)\n        .then(response => {\n          setPeople(people.concat(response))\n          setMessage(\n            `Added ${response.name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n        })\n\n    } else  if(window.confirm(`${newName} is already added to phonebook, do you \n    want to replace the number with a new one`)){\n      \n      const person = people.find(p => p.name === newName)\n      const updatedPerson = {...person, number: newNumber}\n\n      personService\n        .update(person.id, updatedPerson)\n        .then(response => {\n          setPeople(people.map(p => p.id !== person.id ? p : response))\n          setMessage(\n            `Updated ${person.name}'s number`\n            )\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Information of ${person.name} has already been removed from server`\n            )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2000)\n          setPeople(people.filter(p => p.id !== person.id))\n       })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = (id) => {\n    const person = people.find(p => p.id === id)\n    if(window.confirm(`Delete ${person.name}`)){\n      personService.remove(id)\n      setPeople(people.filter(person => person.id !== id))\n      setMessage(\n        `Removed ${person.name}`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 2000)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <ErrorMessage message={errorMessage}/>\n      <Filter value= {newFilter} onChange={handleFilterChange}/>\n      <PersonForm\n        onSubmit={addPerson}\n        name={newName}\n        nameChange={handleNameChange}\n        number={newNumber}\n        numberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      {peopleToShow.map(person => \n        <Person key = {person.name} person = {person} \n                removePerson={() => removePerson(person.id)}/>\n      )}\n    \n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}