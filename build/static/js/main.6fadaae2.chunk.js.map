{"version":3,"sources":["components/filter.js","components/person.js","components/personForm.js","components/messages.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","Person","person","removePerson","name","number","onClick","PersonForm","onSubmit","nameChange","numberChange","type","Notification","message","className","ErrorMessage","baseUrl","personObject","axios","post","then","response","data","get","id","delete","newPerson","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","errorMessage","setErrorMessage","useEffect","personService","personsToShow","toLowerCase","includes","event","target","preventDefault","some","window","confirm","find","p","updatedPerson","map","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fadaae2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter with <input\r\n                      value={props.filter}\r\n                      onChange={props.onChange}\r\n                    />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Person = ({person, removePerson}) => {\r\n    return (\r\n        <p>\r\n          {person.name} {person.number}\r\n          <button onClick={removePerson}>\r\n            delete\r\n          </button>\r\n        </p>  \r\n    )\r\n  }\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Add a new</h2>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input \r\n                  value={props.name}\r\n                  onChange={props.nameChange}\r\n                />\r\n        </div>\r\n        <div>\r\n          number: <input \r\n                  value={props.number}\r\n                  onChange={props.numberChange}\r\n                />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n  \r\n  export { Notification, ErrorMessage }\r\n  ","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst create = (personObject) => {\r\n  const request = axios.post(baseUrl, personObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {create, getAll, remove, update}","import React, { useEffect, useState } from 'react'\r\nimport Filter from './components/filter'\r\nimport Person from './components/person'\r\nimport PersonForm from './components/personForm'\r\nimport {Notification, ErrorMessage} from './components/messages'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ message, setMessage] = useState(null)\r\n  const [ errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response)\r\n      })\r\n  }, [])\r\n\r\n  const personsToShow = \r\n    persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n \r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    \r\n    if(!persons.some(person => person.name === newName)){\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      \r\n      personService\r\n        .create(personObject)\r\n        .then(response => {\r\n          setPersons(persons.concat(response))\r\n          setMessage(\r\n            `Added ${response.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 2000)\r\n        })\r\n\r\n    } else  if(window.confirm(`${newName} is already added to phonebook, do you \r\n    want to replace the number with a new one`)){\r\n      \r\n      const person = persons.find(p => p.name === newName)\r\n      const updatedPerson = {...person, number: newNumber}\r\n\r\n      personService\r\n        .update(person.id, updatedPerson)\r\n        .then(response => {\r\n          setPersons(persons.map(p => p.id !== person.id ? p : response))\r\n          setMessage(\r\n            `Updated ${person.name}'s number`\r\n            )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 2000)\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(\r\n            `Information of ${person.name} has already been removed from server`\r\n            )\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 2000)\r\n          setPersons(persons.filter(p => p.id !== person.id))\r\n       })\r\n    }\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const removePerson = (id) => {\r\n    const person = persons.find(p => p.id === id)\r\n    if(window.confirm(`Delete ${person.name}`)){\r\n      personService.remove(id)\r\n      setPersons(persons.filter(person => person.id !== id))\r\n      setMessage(\r\n        `Removed ${person.name}`\r\n      )\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message}/>\r\n      <ErrorMessage message={errorMessage}/>\r\n      <Filter value= {newFilter} onChange={handleFilterChange}/>\r\n      <PersonForm\r\n        onSubmit={addPerson}\r\n        name={newName}\r\n        nameChange={handleNameChange}\r\n        number={newNumber}\r\n        numberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      {personsToShow.map(person => \r\n        <Person key = {person.name} person = {person} \r\n                removePerson={() => removePerson(person.id)}/>\r\n      )}\r\n    \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}